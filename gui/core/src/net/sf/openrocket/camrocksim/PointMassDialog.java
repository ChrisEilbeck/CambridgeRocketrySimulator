/*
%## Copyright (C) 2010, 2016 S.Box
%## 
%## This program is free software; you can redistribute it and/or modify
%## it under the terms of the GNU General Public License as published by
%## the Free Software Foundation; either version 2 of the License, or
%## (at your option) any later version.
%## 
%## This program is distributed in the hope that it will be useful,
%## but WITHOUT ANY WARRANTY; without even the implied warranty of
%## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
%## GNU General Public License for more details.
%## 
%## You should have received a copy of the GNU General Public License
%## along with this program; if not, write to the Free Software
%## Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA

%## PointMassDialog.java

%## Author: S.Box
%## Created: 2010-05-27
/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * PointMassDialog.java
 *
 * Created on 24-Jan-2010, 16:56:32
 */

package net.sf.openrocket.camrocksim;

import java.util.Vector;

import javax.swing.JOptionPane;

/**
 *
 * @author simon
 */
public class PointMassDialog extends javax.swing.JDialog {
	
	double Mass,
			Position,
			RadialPosition;
	boolean ReadOk;
	String Name;
	
	
	/** Creates new form PointMassDialog */
	public PointMassDialog(java.awt.Frame parent, boolean modal) {
		super(parent, modal);
		initComponents();
	}
	
	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
	private void initComponents() {
		
		PMTitleLabel = new javax.swing.JLabel();
		PMPositionBox = new javax.swing.JTextField();
		AddPMDataButton = new javax.swing.JButton();
		PMCancelButton = new javax.swing.JButton();
		PMMassDim = new javax.swing.JLabel();
		PMPositionDim = new javax.swing.JLabel();
		PMMassLabel = new javax.swing.JLabel();
		PMNameBox = new javax.swing.JTextField();
		PMPositionLabel = new javax.swing.JLabel();
		PMNameLabel = new javax.swing.JLabel();
		PMMassBox = new javax.swing.JTextField();
		PMRadPositionLabel = new javax.swing.JLabel();
		PMRadPositionBox = new javax.swing.JTextField();
		PMRadPositionDim = new javax.swing.JLabel();
		jButton1 = new javax.swing.JButton();
		
		setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
		
		PMTitleLabel.setText("Set point mass specifications");
		
		PMPositionBox.addFocusListener(new java.awt.event.FocusAdapter() {
			public void focusGained(java.awt.event.FocusEvent evt) {
				PMPositionBoxFocusGained(evt);
			}
			
			public void focusLost(java.awt.event.FocusEvent evt) {
				PMPositionBoxFocusLost(evt);
			}
		});
		
		AddPMDataButton.setText("Add");
		AddPMDataButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				AddPMDataButtonActionPerformed(evt);
			}
		});
		
		PMCancelButton.setText("Cancel");
		PMCancelButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				PMCancelButtonActionPerformed(evt);
			}
		});
		
		PMMassDim.setText("kg");
		
		PMPositionDim.setText("m");
		
		PMMassLabel.setText("Mass");
		
		PMNameBox.addFocusListener(new java.awt.event.FocusAdapter() {
			public void focusLost(java.awt.event.FocusEvent evt) {
				PMNameBoxFocusLost(evt);
			}
		});
		
		PMPositionLabel.setText("Position");
		
		PMNameLabel.setText("Name");
		
		PMMassBox.addFocusListener(new java.awt.event.FocusAdapter() {
			public void focusGained(java.awt.event.FocusEvent evt) {
				PMMassBoxFocusGained(evt);
			}
			
			public void focusLost(java.awt.event.FocusEvent evt) {
				PMMassBoxFocusLost(evt);
			}
		});
		
		PMRadPositionLabel.setText("Radial Position");
		
		PMRadPositionBox.addFocusListener(new java.awt.event.FocusAdapter() {
			public void focusGained(java.awt.event.FocusEvent evt) {
				PMRadPositionBoxFocusGained(evt);
			}
			
			public void focusLost(java.awt.event.FocusEvent evt) {
				PMRadPositionBoxFocusLost(evt);
			}
		});
		
		PMRadPositionDim.setText("m");
		
		jButton1.setText("?");
		jButton1.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton1ActionPerformed(evt);
			}
		});
		
		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(
				layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(layout.createSequentialGroup()
								.addContainerGap()
								.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
										.addComponent(PMRadPositionLabel)
										.addComponent(PMNameLabel)
										.addComponent(PMMassLabel)
										.addComponent(PMPositionLabel))
								.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
								.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
										.addComponent(PMRadPositionBox, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
										.addComponent(PMPositionBox, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE)
										.addComponent(PMMassBox, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE)
										.addComponent(PMNameBox, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE))
								.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
										.addComponent(PMMassDim)
										.addComponent(PMPositionDim)
										.addComponent(PMRadPositionDim))
								.addGap(142, 142, 142))
						.addGroup(layout.createSequentialGroup()
								.addGap(12, 12, 12)
								.addComponent(PMTitleLabel)
								.addContainerGap(201, Short.MAX_VALUE))
						.addGroup(layout.createSequentialGroup()
								.addGap(92, 92, 92)
								.addComponent(AddPMDataButton, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addGap(18, 18, 18)
								.addComponent(PMCancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addGap(18, 18, 18)
								.addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addContainerGap(101, Short.MAX_VALUE)));
		layout.setVerticalGroup(
				layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(layout.createSequentialGroup()
								.addContainerGap()
								.addComponent(PMTitleLabel)
								.addGap(18, 18, 18)
								.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
										.addComponent(PMNameLabel)
										.addComponent(PMNameBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
								.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
								.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
										.addComponent(PMMassLabel)
										.addComponent(PMMassBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
										.addComponent(PMMassDim, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
								.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
										.addComponent(PMPositionLabel)
										.addComponent(PMPositionBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
										.addComponent(PMPositionDim))
								.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
										.addComponent(PMRadPositionLabel)
										.addComponent(PMRadPositionDim)
										.addComponent(PMRadPositionBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
								.addGap(77, 77, 77)
								.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
										.addComponent(AddPMDataButton)
										.addComponent(PMCancelButton)
										.addComponent(jButton1))
								.addGap(18, 18, 18)));
		
		pack();
	}// </editor-fold>//GEN-END:initComponents
	
	private void PMPositionBoxFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_PMPositionBoxFocusGained
		// TODO add your handling code here:
		PMPositionBox.setForeground(java.awt.Color.BLACK);
	}//GEN-LAST:event_PMPositionBoxFocusGained
	
	private void PMPositionBoxFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_PMPositionBoxFocusLost
		//Function to test the validity of the user input
		TestUserTextInput PositionTest = new TestUserTextInput(PMPositionBox);
		Position = PositionTest.TestDouble();
		PMPositionBox = PositionTest.InputField;
	}//GEN-LAST:event_PMPositionBoxFocusLost
	
	private void AddPMDataButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddPMDataButtonActionPerformed
		// TODO add your handling code here:
		boolean Goer = CheckValidity();
		if (Goer == true) {
			ReadOk = true;
			this.dispose();
		} else {
			JOptionPane.showMessageDialog(null, ("Something is wrong with the data that you entered"));
		}
	}//GEN-LAST:event_AddPMDataButtonActionPerformed
	
	private void PMCancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PMCancelButtonActionPerformed
		// TODO add your handling code here:
		this.dispose();
	}//GEN-LAST:event_PMCancelButtonActionPerformed
	
	private void PMNameBoxFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_PMNameBoxFocusLost
		// TODO add your handling code here:
		Name = PMNameBox.getText();
	}//GEN-LAST:event_PMNameBoxFocusLost
	
	private void PMMassBoxFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_PMMassBoxFocusLost
		//Function to test the validity of the user input
		TestUserTextInput MassTest = new TestUserTextInput(PMMassBox);
		Mass = MassTest.TestDouble();
		PMMassBox = MassTest.InputField;
	}//GEN-LAST:event_PMMassBoxFocusLost
	
	private void PMMassBoxFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_PMMassBoxFocusGained
		// TODO add your handling code here:
		PMMassBox.setForeground(java.awt.Color.BLACK);
	}//GEN-LAST:event_PMMassBoxFocusGained
	
	private void PMRadPositionBoxFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_PMRadPositionBoxFocusGained
		// TODO add your handling code here:
	}//GEN-LAST:event_PMRadPositionBoxFocusGained
	
	private void PMRadPositionBoxFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_PMRadPositionBoxFocusLost
		// TODO add your handling code here:
		TestUserTextInput RadPositionTest = new TestUserTextInput(PMRadPositionBox);
		RadialPosition = RadPositionTest.TestDouble();
		PMRadPositionBox = RadPositionTest.InputField;
	}//GEN-LAST:event_PMRadPositionBoxFocusLost
	
	private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
		Tips tDiag = new Tips(null, true);
		tDiag.setTipTxt(
				"Point Mass Settings \n\n Small parts can be specified as a point mass. Position is the distance, along the rocket's axis, from the nose tip to the mass. Radial position is the offset between the mass and the rocket's axis.");
		tDiag.setVisible(true);
	}//GEN-LAST:event_jButton1ActionPerformed
	
	private boolean CheckValidity() {
		boolean answer;
		Vector<javax.swing.JTextField> FieldsList = new Vector<javax.swing.JTextField>();
		FieldsList.add(PMMassBox);
		FieldsList.add(PMPositionBox);
		FieldsList.add(PMRadPositionBox);
		
		TestUserTextInput TUI1 = new TestUserTextInput(FieldsList);
		answer = TUI1.TestDoubleList();
		return (answer);
	}
	
	/**
	* @param args the command line arguments
	*/
	public static void main(String args[]) {
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				PointMassDialog dialog = new PointMassDialog(new javax.swing.JFrame(), true);
				dialog.addWindowListener(new java.awt.event.WindowAdapter() {
					public void windowClosing(java.awt.event.WindowEvent e) {
						System.exit(0);
					}
				});
				dialog.setVisible(true);
			}
		});
	}
	
	public void FillFields(double d1, double d2, double d3, String s1) {
		Mass = d1;
		Position = d2;
		RadialPosition = d3;
		Name = s1;
		
		PMMassBox.setText(Double.toString(Mass));
		PMPositionBox.setText(Double.toString(Position));
		PMNameBox.setText(Name);
		PMRadPositionBox.setText(Double.toString(RadialPosition));
		
	}
	
	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JButton AddPMDataButton;
	private javax.swing.JButton PMCancelButton;
	private javax.swing.JTextField PMMassBox;
	private javax.swing.JLabel PMMassDim;
	private javax.swing.JLabel PMMassLabel;
	private javax.swing.JTextField PMNameBox;
	private javax.swing.JLabel PMNameLabel;
	private javax.swing.JTextField PMPositionBox;
	private javax.swing.JLabel PMPositionDim;
	private javax.swing.JLabel PMPositionLabel;
	private javax.swing.JTextField PMRadPositionBox;
	private javax.swing.JLabel PMRadPositionDim;
	private javax.swing.JLabel PMRadPositionLabel;
	private javax.swing.JLabel PMTitleLabel;
	private javax.swing.JButton jButton1;
	// End of variables declaration//GEN-END:variables
	
}
